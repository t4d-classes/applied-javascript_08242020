{"version":3,"sources":["hooks/useCarStore.js","services/CarsData.js","components/ToolHeader.js","components/CarViewRow.js","hooks/useForm.js","components/CarEditRow.js","components/CarTable.js","components/CarForm.js","components/CarTool.js","index.js"],"names":["carsData","baseUrl","this","fetch","res","json","cars","map","car","id","_id","method","headers","body","JSON","stringify","appendedCar","encodeURIComponent","carId","ToolHeader","props","className","headerText","CarViewRow","editCar","onEditCar","deleteCar","onDeleteCar","make","model","year","color","price","type","onClick","useForm","initialForm","useState","form","setForm","e","target","name","valueAsNumber","value","CarEditRow","carForm","change","onChange","onSaveCar","onCancelCar","CarTable","editCarId","saveCar","cancelCar","key","defaultProps","nanToValue","isNaN","CarForm","buttonText","onSubmitCar","resetCarForm","CarTool","setCars","setEditCarId","refreshCars","allCars","then","useEffect","appendCar","a","replaceCar","removeCar","useCarStore","concat","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.ffc309b4.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\nimport { CarsData } from '../services/CarsData';\n\nconst carsData = new CarsData('/api');\n\nexport const useCarStore = () => {\n\n  const [ cars, setCars ] = useState([]);\n  const [ editCarId, setEditCarId ] = useState(-1);\n\n  const refreshCars = () => {\n    return carsData.allCars().then(cars => setCars(cars));\n  };\n\n  useEffect(() => {\n    refreshCars();\n  }, []);\n\n  return {\n    cars,\n    editCarId,\n    refreshCars,\n    appendCar: async (car) => {\n      await carsData.appendCar(car);\n      await refreshCars();\n      setEditCarId(-1);\n    },\n    replaceCar: (car) => {\n      return carsData.replaceCar(car)\n        .then(() => refreshCars())\n        .then(() => setEditCarId(-1));\n    },\n    removeCar: (carId) => {\n      return carsData.removeCar(carId)\n        .then(() => refreshCars())\n        .then(() => setEditCarId(-1));\n    },\n    editCar: setEditCarId,\n    cancelCar: () => setEditCarId(-1),\n  };\n\n};\n","\n\nexport class CarsData {\n\n  constructor(baseUrl) {\n    this.baseUrl = baseUrl;\n  }\n\n  async allCars() {\n    const res = await fetch(`${this.baseUrl}/cars`);\n    const cars = await res.json();\n    return cars.map(car => {\n      car.id = car._id;\n      delete car._id;\n      return car;\n    });\n  }\n\n  async appendCar(car) {\n    const res = await fetch(`${this.baseUrl}/cars`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(car),\n    });\n    const appendedCar = await res.json();\n    return appendedCar;\n  }\n\n  async replaceCar(car) {\n    await fetch(`${this.baseUrl}/cars/${encodeURIComponent(car.id)}`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(car),\n    });\n  }\n\n  async removeCar(carId) {\n    await fetch(`${this.baseUrl}/cars/${encodeURIComponent(carId)}`, {\n      method: 'DELETE',\n    });\n  }\n\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const ToolHeader = (props) => {\n\n  return (\n    <header>\n      <h1 className=\"page-header\">{props.headerText}</h1>\n    </header>\n  );\n\n};\n\nToolHeader.propTypes = {\n  headerText: PropTypes.string.isRequired,\n};","import React from 'react';\n\nexport const CarViewRow = ({\n  car,\n  onEditCar: editCar,\n  onDeleteCar: deleteCar,\n}) => {\n\n  return (\n    <tr>\n      <td>{car.id}</td>\n      <td>{car.make}</td>\n      <td>{car.model}</td>\n      <td>{car.year}</td>\n      <td>{car.color}</td>\n      <td>{car.price}</td>\n      <td>\n        <button type=\"button\" onClick={() => editCar(car.id)}>Edit</button>\n        <button type=\"button\" onClick={() => deleteCar(car.id)}>Delete</button>\n      </td>\n    </tr>\n  );\n\n};","import { useState } from 'react';\n\nexport const useForm = (initialForm) => {\n\n  const [ form, setForm ] = useState(initialForm);\n\n  const change = (e) => {\n    setForm({\n      ...form,\n      [ e.target.name ]: e.target.type === 'number'\n        ? e.target.valueAsNumber : e.target.value,\n    });\n  };\n\n  return [ form, change, () => setForm(initialForm) ];\n\n};","import React from 'react';\n\nimport { useForm } from '../hooks/useForm';\n\nexport const CarEditRow = (props) => {\n\n  const [\n    carForm,\n    change\n  ] = useForm({\n    make: props.car.make,\n    model: props.car.model,\n    year: props.car.year,\n    color: props.car.color,\n    price: props.car.price,\n  });\n\n  const saveCar = () => {\n    props.onSaveCar({\n      ...carForm,\n      id: props.car.id,\n    });\n  };\n\n  return (\n    <tr>\n      <td>{props.car.id}</td>\n      <td><input type=\"text\" id=\"edit-make-input\" name=\"make\" value={carForm.make} onChange={change} /></td>\n      <td><input type=\"text\" id=\"edit-model-input\" name=\"model\" value={carForm.model} onChange={change} /></td>\n      <td><input type=\"text\" id=\"edit-year-input\" name=\"year\" value={carForm.year} onChange={change} /></td>\n      <td><input type=\"text\" id=\"edit-color-input\" name=\"color\" value={carForm.color} onChange={change} /></td>\n      <td><input type=\"text\" id=\"edit-price-input\" name=\"price\" value={carForm.price} onChange={change} /></td>\n      <td>\n        <button type=\"button\" onClick={saveCar}>Save</button>\n        <button type=\"button\" onClick={props.onCancelCar}>Cancel</button>\n      </td>\n    </tr>\n  );\n\n};","import React from 'react';\n\nimport { CarViewRow } from './CarViewRow';\nimport { CarEditRow } from './CarEditRow';\n\nexport const CarTable = ({\n  cars, editCarId,\n  onEditCar: editCar,\n  onDeleteCar: deleteCar,\n  onSaveCar: saveCar,\n  onCancelCar: cancelCar,\n}) => {\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th>Id</th>\n          <th>Make</th>\n          <th>Model</th>\n          <th>Year</th>\n          <th>Color</th>\n          <th>Price</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {cars.map(car => car.id === editCarId\n          ? <CarEditRow key={car.id} car={car} onSaveCar={saveCar} onCancelCar={cancelCar} />\n          : <CarViewRow key={car.id} car={car} onEditCar={editCar} onDeleteCar={deleteCar} />)}\n      </tbody>\n    </table>\n  );\n\n}\n\nCarTable.defaultProps = {\n  cars: [],\n};","import React from 'react';\n\nimport { useForm } from '../hooks/useForm';\n\nconst nanToValue = (value) => {\n  if (isNaN(value)){\n    return '';\n  } else {\n    return value;\n  }\n};\n\nexport const CarForm = ({\n  buttonText, onSubmitCar,\n}) => {\n\n  const [ carForm, change, resetCarForm ] = useForm({\n    make: '', model: '', year: 1900, color: '', price: 0,\n  });\n\n  const submitCar = () => {\n    onSubmitCar(carForm);\n    resetCarForm();\n  };\n\n  return (\n    <form>\n      <div>\n        <label>Make:</label>\n        <input type=\"text\" id=\"make-input\" name=\"make\" value={carForm.make} onChange={change} />\n      </div>\n      <div>\n        <label>Model:</label>\n        <input type=\"text\" id=\"model-input\" name=\"model\" value={carForm.model} onChange={change} />\n      </div>\n      <div>\n        <label>Year:</label>\n        <input type=\"number\" id=\"year-input\" name=\"year\" value={nanToValue(carForm.year)} onChange={change} />\n      </div>\n      <div>\n        <label>Color:</label>\n        <input type=\"text\" id=\"color-input\" name=\"color\" value={carForm.color} onChange={change} />\n      </div>\n      <div>\n        <label>Price:</label>\n        <input type=\"number\" id=\"price-input\" name=\"price\" value={nanToValue(carForm.price)} onChange={change} />\n      </div>\n      <button type=\"button\" onClick={submitCar}>{buttonText}</button>\n    </form>\n  );\n\n};","import React from 'react';\n\nimport { useCarStore } from '../hooks/useCarStore';\n\nimport { ToolHeader } from './ToolHeader';\nimport { CarTable } from './CarTable';\nimport { CarForm } from './CarForm';\n\nexport const CarTool = (props) => {\n\n  const {\n    cars, editCarId, appendCar, replaceCar,\n    removeCar, editCar, cancelCar,\n  } = useCarStore(props.cars.concat());\n\n  return (\n    <>\n      <ToolHeader headerText=\"Car Tool\" />\n      <CarTable cars={cars} editCarId={editCarId}\n        onEditCar={editCar} onDeleteCar={removeCar}\n        onSaveCar={replaceCar} onCancelCar={cancelCar} />\n      <CarForm buttonText=\"Add Car\" onSubmitCar={appendCar} />\n    </>\n  );\n\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { CarTool } from './components/CarTool';\n\nconst carList = [\n  { id: 1, make: 'Ford', model: 'Fusion', year: 2019, color: 'white', price: 45000 },\n  { id: 2, make: 'Tesla', model: 'S', year: 2020, color: 'red', price: 120000 },\n];\n\nReactDOM.render(\n  <CarTool cars={carList} />,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}